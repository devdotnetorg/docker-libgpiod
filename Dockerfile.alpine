##########################################
# Image Alpine with libgpiod
# C library and tools for interacting with
# the linux GPIO character device
# Site: https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git
##########################################

ARG IMAGE_VERSION="alpine:3.20"

# build
FROM $IMAGE_VERSION as build
ARG LIB_VERSION="2.1.2"

# Install
RUN apk update && apk upgrade --available && apk add --no-cache --upgrade sudo bash

# Copy to image
COPY setup-libgpiod.sh /
RUN chmod +x /setup-libgpiod.sh \
	&& /setup-libgpiod.sh --type source --path /usr/share/libgpiod --version ${LIB_VERSION} --artifact yes

# out
FROM scratch as artifact
COPY --from=build /out/* /

# result
FROM $IMAGE_VERSION as release
ARG LIB_VERSION="2.1.2"
# Label docker image
MAINTAINER DevDotNet.Org <anton@devdotnet.org>
LABEL version="$LIB_VERSION"
LABEL maintainer="DevDotNet.Org <anton@devdotnet.org>"

COPY --from=build /usr/share/libgpiod/artifact.zip /artifact.zip

RUN apk update \
	&& apk upgrade --available \
	&& apk add --no-cache --upgrade unzip \
	&& unzip -o /artifact.zip -d /usr/ \
	&& rm /artifact.zip \
	&& apk del unzip \
#Cleaning
	&& rm -rf /var/lib/{cache,log}/ \
	&& rm -rf /var/lib/apt/lists/*.lz4 \
	&& rm -rf /var/log/* \
	&& rm -rf /tmp/* /var/tmp/* \
	&& rm -rf /usr/share/doc/ \
	&& rm -rf /usr/share/man/ \
	&& rm -rf /var/cache/apk/*

CMD ["/usr/bin/gpioinfo", "-v"]
